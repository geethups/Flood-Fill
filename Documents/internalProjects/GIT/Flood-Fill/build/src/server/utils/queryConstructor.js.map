{"version":3,"sources":["utils/queryConstructor.js"],"names":[],"mappings":"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","file":"utils/queryConstructor.js","sourcesContent":["'use strict';\nvar cfgManager = require('node-config-manager'),\n    log = require('../services/logger'),\n    Q = require('q');\n\nconst dbSchema = cfgManager.getConfig('dbSchema');\n\nfunction mysqlRealEscapeString(str) {\n    return str.replace(/[\\0\\x08\\x09\\x1a\\n\\r\"'\\\\\\%]/g, function (char) {\n        switch (char) {\n            case '\\0':\n                return '\\\\0';\n            case '\\x08':\n                return '\\\\b';\n            case '\\x09':\n                return '\\\\t';\n            case '\\x1a':\n                return '\\\\z';\n            case '\\n':\n                return '\\\\n';\n            case '\\r':\n                return '\\\\r';\n            case '\\\"':\n            case '\\'':\n            case '\\\\':\n            case '%':\n                return '\\\\' + char;\n            default:\n        }\n    });\n}\n\nfunction getColumns(obj) {\n    var field = '(';\n    for (var i = 0; i < obj.length; i++) {\n        field = field + obj[i];\n        if (i !== obj.length - 1) {\n            field = field + ',';\n        } else {\n            field = field + ')';\n        }\n    }\n    return field;\n}\n\nfunction getValues(obj) {\n    try {\n        function returnValue(k) {\n            return '\\'' + mysqlRealEscapeString(obj[k]) + '\\'';\n        }\n        const valueList = Object.keys(obj).map(returnValue);\n        const value = '(' + valueList.join(',') + ')';\n        return value;\n    } catch (err) {\n        log.error('Caught exception: ' + err);\n    }\n}\n\nfunction getColumnsForTable(table) {\n    var columns;\n    switch (table) {\n        case 'QuestionsTable':\n            columns = dbSchema.QuestionsInfo.columns;\n            break;\n        case 'AnswerTable':\n            columns = dbSchema.AnswerInfo.columns;\n            break;\n        case 'LikeTable':\n            columns = dbSchema.LikeInfo.columns;\n            break;\n        case 'UserTable':\n            columns = dbSchema.UserInfo.columns;\n            break;\n        default:\n            columns = '';\n            break;\n\n    }\n    return columns;\n}\n\nfunction setConstructor(dataArr) {\n    var setStr = '';\n    for (var key in dataArr) {\n        var dataVal = (typeof (dataArr[key].updateVal) == 'string') ? '\\'' + mysqlRealEscapeString(dataArr[key].updateVal) + '\\'' : dataArr[key].updateVal;\n        setStr = setStr + dataArr[key].updateField + '=' + dataVal + ',';\n    }\n    setStr = setStr.slice(0, -1);\n    return setStr;\n}\n\nfunction getQueryString(table, data, DBoperation) {\n    var query;\n    try {\n        if (DBoperation === 'INSERT') {\n            const column = getColumns(getColumnsForTable(table));\n            const values = getValues(data);\n            query = 'INSERT INTO ' + table + column + ' VALUES ' + values + ';';\n        } else if (DBoperation === 'UPDATE') {\n            if (data && data.updateObj) {\n                var setStr = setConstructor(data.updateObj);\n            }\n            const keyField = data.keyField;\n            const keyVal = getValues({\n                'keyVal': data.keyVal\n            });\n            query = 'UPDATE ' + table + ' SET ' + setStr + ' WHERE ' + keyField + '=' + keyVal + ';';\n        }\n        if (!query) {\n            throw new Error('Query Constructor failed.');\n        }\n    } catch (exception) {\n        log.error('Caught exception: ' + exception);\n    }\n    return query;\n}\n\nfunction getSelectQuesQueryString(table, quesDesc) {\n    var query;\n    if (quesDesc === 'all') {\n        query = 'SELECT * FROM ' + table + ';';\n    } else {\n        const value = '\\'' + mysqlRealEscapeString(quesDesc) + '\\'';\n        query = 'SELECT * FROM ' + table + ' where questionDesc = ' + value + ';';\n    }\n    return query;\n}\n\nfunction getSelectLoginQueryString(table, loginData) {\n    var query;\n    query = 'SELECT * FROM ' + table + ' where userName = ' + '\\'' + mysqlRealEscapeString(loginData.username) + '\\'' +\n        ' and password=' + '\\'' + mysqlRealEscapeString(loginData.password) + '\\'' + ';';\n    return query;\n}\n\nfunction constructSelectCond(dataArr) {\n    var setStr = '';\n    for (var key in dataArr) {\n        var keyVal = dataArr[key];\n        var dataVal = (typeof (keyVal.val) == 'string') ? '\\'' + mysqlRealEscapeString(keyVal.val) + '\\'' : keyVal.val;\n        setStr = setStr + keyVal.col + '=' + dataVal + '&&';\n    }\n    setStr = setStr.slice(0, -1);\n    setStr = setStr.slice(0, -1);\n    return setStr;\n}\n\nfunction getSelectQueryString(table, dataArr) {\n    var query, setStr;\n    if (dataArr) {\n        setStr = constructSelectCond(dataArr);\n    }\n    query = 'SELECT * FROM ' + table + ' where ' + setStr + ';';\n    return query;\n}\n\nfunction getDeleteQueryString(table, data) {\n    var query,\n        column = JSON.parse(data).col,\n        value = '\\'' + mysqlRealEscapeString(JSON.parse(data).val) + '\\'';\n    query = 'DELETE FROM ' + table + ' WHERE ' + column + ' = ' + value + ';';\n    return query;\n}\n\nfunction getTable(tableFile) {\n    var table,\n        deferred = Q.defer();\n    switch (tableFile) {\n        case 'ques':\n            table = dbSchema.QuestionsInfo.tableName;\n            break;\n        case 'ans':\n            table = dbSchema.AnswerInfo.tableName;\n            break;\n        case 'like':\n            table = dbSchema.LikeInfo.tableName;\n            break;\n        case 'tech':\n            table = dbSchema.TechInfo.tableName;\n            break;\n        case 'user':\n            table = dbSchema.UserInfo.tableName;\n            break;\n        default:\n            table = '';\n            break;\n    }\n    if (table) {\n        deferred.resolve(table);\n    } else {\n        deferred.reject(table);\n    }\n    return deferred.promise;\n}\n\nvar queryConstructor = {\n    getQueryString: getQueryString,\n    getSelectQueryString: getSelectQueryString,\n    getSelectLoginQueryString: getSelectLoginQueryString,\n    getSelectQuesQueryString: getSelectQuesQueryString,\n    getDeleteQueryString: getDeleteQueryString,\n    getTable: getTable\n};\n\nmodule.exports = queryConstructor;\n"],"sourceRoot":"/home/geethu/Documents/internalProjects/openshift/floodfill/es6"}